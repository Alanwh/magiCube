{"version":3,"sources":["pages/goods/index.tsx","components/SearchFillter.tsx","utils/constant/index.ts","components/TableList.tsx","components/Pagination.tsx","components/CreacteActivity.tsx","utils/enum/enum.ts","pages/list/App.tsx","pages/detail/index.tsx","pages/condition/index.tsx","layout/index.tsx","index.tsx"],"names":["Goods","React","Component","Option","CollectionCreateForm","create","name","handleRadioChange","e","props","changeTemplateType","target","value","templateType","this","visible","onCancel","onCreate","getFieldDecorator","form","title","okText","cancelText","onOk","labelCol","xs","span","sm","wrapperCol","Item","className","initialValue","Group","onChange","label","rules","required","message","type","InputTemplate","style","width","placeholder","key","TimeTemplate","SelectTemplate","ButtonTemplate","SearchFillter","formRef","state","showModal","setState","handleCancel","handleCreate","validateFields","err","values","resetFields","handleSearch","val","saveFormRef","onClick","wrappedComponentRef","FILTERS","filter","mode","map","item","WrappedTableList","handleTable","Pagination","handlePage","PageTYPE","CreateActivity","handleCreateActivity","CheckboxGroup","modules","DeleteOption","removeSearchColumn","onConfirm","icon","color","App","selectedModules","pageOptions","Object","assign","hasPagination","some","handleOk","data","filters","options","JSON","parse","splice","length","addData","push","table","saveConfig","json","search","buttons","axios","post","then","success","pageIndex","pageSize","forEach","i","index","bind","buttonType","renderTemplate","removeTableColumn","Detail","Condition","handleTableList","loadTableInfo","tableName","tableInfo","handleTableInfo","conditionQueryField","String","save","params","allColumnss","pid","sqlCheck","updateColumns","flag","handleUpdateTable","tableList","method","column_name","column_comment","loadTableList","Header","Content","Footer","Sider","SubMenu","PageLayout","collapsed","contentPage","LIST","onCollapse","changePageRouter","SEARCH_FILLTER","DETAIL","GOODS","minHeight","collapsible","theme","defaultSelectedKeys","background","padding","margin","renderContent","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7e98c74d.chunk.js","sourcesContent":["import React from 'react'\n\nclass Goods extends React.Component {\n  render () {\n    return (\n      <>\n        <div>\n          正在开发中...\n        </div>\n        <div>\n          正在开发中...\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Goods","import React from 'react';\nimport { Button, Modal, Form, Input, Radio, Select } from 'antd';\n\nconst { Option } = Select;\n\nfunction InputTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction ButtonTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='按钮类型'>\n        {getFieldDecorator('buttonType', {\n          initialValue: 'primary'\n        })(\n          <Radio.Group name='buttonType'>\n            <Radio value='primary'>primary</Radio>\n            <Radio value='warning'>warning</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='请求地址'>\n        {getFieldDecorator('url')(<Input />)}\n      </Form.Item>\n      <Form.Item label='功能'>\n        {getFieldDecorator('effect', {\n          initialValue: 'search'\n        })(\n          <Radio.Group name='buttonEffect'>\n            <Radio value='search'>搜索</Radio>\n            <Radio value='clear'>重置</Radio>\n            <Radio value='add'>新增</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction SelectTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='url'>\n        {getFieldDecorator('url')(<Input />)}\n      </Form.Item>\n      <Form.Item label='下拉选项'>\n        {getFieldDecorator('options')(<Input type='textarea'/>)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction TimeTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='日历类型'>\n        {getFieldDecorator('date', {\n          initialValue: 'option1'\n        })(\n          <Select\n            style={{ width: 200 }}\n            placeholder='请选择日历类型'\n          >\n            <Option value='option1' key='option1'>单日历不带时间</Option>\n            <Option value='option2' key='option2'>单日历带时间</Option>\n            <Option value='option3' key='option3'>双日历不带时间</Option>\n            <Option value='option4' key='option4'>双日历带时间</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nconst CollectionCreateForm: any = Form.create({ name: 'form_in_modal' })(\n  class extends React.Component<any, any> {\n    render() {\n      const { templateType } = this.props\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      return (\n        <Modal\n          visible={visible}\n          title='搜索选项配置'\n          okText='确定'\n          cancelText='取消'\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item className='collection-create-form_last-form-item'>\n              {getFieldDecorator('type', {\n                initialValue: 'input',\n              })(\n                <Radio.Group onChange={this.handleRadioChange} name='inputType'>\n                  <Radio value='input'>输入框</Radio>\n                  <Radio value='select'>下拉列表</Radio>\n                  <Radio value='dateSelect'>时间选择器</Radio>\n                  <Radio value='button'>按钮</Radio>\n                </Radio.Group>\n              )}\n            </Form.Item>\n            { templateType === 'input' &&  InputTemplate(getFieldDecorator) }\n            { templateType === 'dateSelect' &&  TimeTemplate(getFieldDecorator) }\n            { templateType === 'select' &&  SelectTemplate(getFieldDecorator) }\n            { templateType === 'button' &&  ButtonTemplate(getFieldDecorator) }\n          </Form>\n        </Modal>\n      );\n    }\n\n    handleRadioChange = (e: any) => {\n      this.props.changeTemplateType(e.target.value)\n    }\n  }\n);\n\nclass SearchFillter extends React.Component <any, any>{\n  formRef: any\n\n  state = {\n    visible: false,\n    templateType: 'input'\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err: any, values: any) => {\n      if (err) { return; }\n      form.resetFields();\n      this.setState({ visible: false, templateType: 'input' });\n      this.props.handleSearch(values);\n    });\n  };\n\n  changeTemplateType = (val: String) => {\n    this.setState({ templateType: val })\n  }\n\n  saveFormRef = (formRef: any) => {\n    this.formRef = formRef;\n  };\n\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showModal}>配置</Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          templateType={this.state.templateType}\n          changeTemplateType={this.changeTemplateType}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default SearchFillter;","export const LIST_CONFIG = 'list_config'\n\nexport const FILTERS = [\n  {\n    filter: 'time_farmat',\n    name: '时间戳转换'\n  },\n  {\n    filter: 'array_first_farmat',\n    name: '数组取首项'\n  }\n]","import React from 'react'\nimport { FILTERS } from '../utils/constant'\nimport { Button, Modal, Form, Input, Select } from 'antd'\n\nconst { Option } = Select\n\ninterface filters {\n  name: string\n  filter: string\n}\n\nconst CollectionCreateForm: any = Form.create({ name: 'form_in_modal' })(\n  class extends React.Component <any, any>{\n\n    constructor (props: any) {\n      super(props)\n      this.state = {\n        templateType: 'input'\n      }\n    }\n\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props\n      const { getFieldDecorator } = form\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      }\n      return (\n        <Modal\n          visible={visible}\n          title='列表选项配置'\n          okText='确定'\n          cancelText='取消'\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label='key值'>\n              {getFieldDecorator('prop', {\n                rules: [{ required: true, message: '必须输入字段key' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label='列名称'>\n              {getFieldDecorator('label', {\n                rules: [{ required: true, message: '必须输入列名称' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label='数据处理'>\n              {getFieldDecorator('filter')(\n                <Select mode='multiple' style={{ width: 400 }}>\n                {\n                  FILTERS.map((item: filters) => (\n                    <Option\n                      value={item.filter}\n                      key={item.filter}\n                    >\n                      {item.name}\n                    </Option>))\n                }\n              </Select>\n              )}\n            </Form.Item>\n            <Form.Item label='样式'>\n              {getFieldDecorator('style')(<Input />)}\n            </Form.Item>\n            <Form.Item label='默认值'>\n              {getFieldDecorator('default')(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      )\n    }\n  }\n)\n\nclass WrappedTableList extends React.Component <any, any>{\n  formRef: any\n\n  state = {\n    visible: false,\n  }\n\n  showModal = () => {\n    this.setState({ visible: true })\n  }\n\n  handleCancel = () => {\n    this.setState({ visible: false })\n  }\n\n  handleCreate = () => {\n    const { form } = this.formRef.props\n    form.validateFields((err: any, values: any) => {\n      if (err) { return }\n      form.resetFields()\n      this.setState({ visible: false })\n      this.props.handleTable(values)\n    })\n  }\n\n  saveFormRef = (formRef: any) => {\n    this.formRef = formRef\n  }\n\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showModal}>配置</Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default WrappedTableList","import React from 'react';\nimport { Button, Modal, Form, Input } from 'antd';\n\nconst CollectionCreateForm: any = Form.create({ name: 'form_in_modal' })(\n  class extends React.Component <any, any>{\n    constructor (props: any) {\n      super(props);\n      this.state = {\n        templateType: 'input'\n      }\n    }\n\n    render() {\n      const { visible, onCancel, onCreate, form } = this.props;\n      const { getFieldDecorator } = form;\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      };\n      return (\n        <Modal\n          visible={visible}\n          title=\"列表选项配置\"\n          okText=\"确定\"\n          cancelText=\"取消\"\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item label=\"开始页数\">\n              {getFieldDecorator('pageIndex', {\n                initialValue: '1',\n                rules: [{ required: true, message: '必须输入开始页数' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"每页条数\">\n              {getFieldDecorator('pageSize', {\n                initialValue: '10',\n                rules: [{ required: true, message: '必须输入每次条数' }],\n              })(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"样式\">\n              {getFieldDecorator('style')(<Input />)}\n            </Form.Item>\n            <Form.Item label=\"默认值\">\n              {getFieldDecorator('default')(<Input />)}\n            </Form.Item>\n          </Form>\n        </Modal>\n      );\n    }\n  },\n);\n\nclass Pagination extends React.Component <any, any>{\n  formRef: any\n\n  state = {\n    visible: false,\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCreate = () => {\n    const { form } = this.formRef.props;\n    form.validateFields((err: any, values: any) => {\n      if (err) { return; }\n      form.resetFields();\n      this.setState({ visible: false });\n      this.props.handlePage(values);\n    });\n  };\n\n  saveFormRef = (formRef: any) => {\n    this.formRef = formRef;\n  };\n\n  render () {\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>配置</Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Pagination;","import React from 'react'\nimport { Button, Modal, Form, Input, Radio, Select } from 'antd'\n\nconst { Option } = Select\n\nfunction InputTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction ButtonTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='按钮类型'>\n        {getFieldDecorator('buttonType', {\n          initialValue: 'primary'\n        })(\n          <Radio.Group name='buttonType'>\n            <Radio value='primary'>primary</Radio>\n            <Radio value='warning'>warning</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='请求地址'>\n        {getFieldDecorator('url')(<Input />)}\n      </Form.Item>\n      <Form.Item label='功能'>\n        {getFieldDecorator('effect', {\n          initialValue: 'search'\n        })(\n          <Radio.Group name='buttonEffect'>\n            <Radio value='search'>搜索</Radio>\n            <Radio value='clear'>重置</Radio>\n            <Radio value='add'>新增</Radio>\n          </Radio.Group>\n        )}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction SelectTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='url'>\n        {getFieldDecorator('url')(<Input />)}\n      </Form.Item>\n      <Form.Item label='下拉选项'>\n        {getFieldDecorator('options')(<Input type='textarea'/>)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nfunction TimeTemplate (getFieldDecorator: Function) {\n  return(\n    <>\n      <Form.Item label='日历类型'>\n        {getFieldDecorator('date', {\n          initialValue: 'option1'\n        })(\n          <Select\n            style={{ width: 200 }}\n            placeholder='请选择日历类型'\n          >\n            <Option value='option1' key='option1'>单日历不带时间</Option>\n            <Option value='option2' key='option2'>单日历带时间</Option>\n            <Option value='option3' key='option3'>双日历不带时间</Option>\n            <Option value='option4' key='option4'>双日历带时间</Option>\n          </Select>\n        )}\n      </Form.Item>\n      <Form.Item label='key值'>\n        {getFieldDecorator('key', {\n          rules: [{ required: true, message: '必须输入字段key' }],\n        })(<Input />)}\n      </Form.Item>\n      <Form.Item label='关联文案'>\n        {getFieldDecorator('label', {\n          rules: [{ required: true, message: '必须输入关联文案' }],\n        })(<Input type='textarea' />)}\n      </Form.Item>\n      <Form.Item label='占位符'>\n        {getFieldDecorator('placeholder')(<Input />)}\n      </Form.Item>\n      <Form.Item label='样式'>\n        {getFieldDecorator('style')(<Input />)}\n      </Form.Item>\n      <Form.Item label='默认值'>\n        {getFieldDecorator('default')(<Input />)}\n      </Form.Item>\n    </>\n  )\n}\n\nconst CollectionCreateForm: any = Form.create({ name: 'form_in_modal' })(\n  class extends React.Component<any, any> {\n    render() {\n      const { templateType } = this.props\n      const { visible, onCancel, onCreate, form } = this.props\n      const { getFieldDecorator } = form\n      const formItemLayout = {\n        labelCol: {\n          xs: { span: 24 },\n          sm: { span: 4 },\n        },\n        wrapperCol: {\n          xs: { span: 24 },\n          sm: { span: 20 },\n        },\n      }\n      return (\n        <Modal\n          visible={visible}\n          title='新增选项配置'\n          okText='确定'\n          cancelText='取消'\n          onCancel={onCancel}\n          onOk={onCreate}\n        >\n          <Form {...formItemLayout}>\n            <Form.Item className='collection-create-form_last-form-item'>\n              {getFieldDecorator('type', {\n                initialValue: 'input',\n              })(\n                <Radio.Group onChange={this.handleRadioChange} name='inputType'>\n                  <Radio value='input'>输入框</Radio>\n                  <Radio value='select'>下拉列表</Radio>\n                  <Radio value='dateSelect'>时间选择器</Radio>\n                  <Radio value='button'>按钮</Radio>\n                </Radio.Group>\n              )}\n            </Form.Item>\n            { templateType === 'input' &&  InputTemplate(getFieldDecorator) }\n            { templateType === 'dateSelect' &&  TimeTemplate(getFieldDecorator) }\n            { templateType === 'select' &&  SelectTemplate(getFieldDecorator) }\n            { templateType === 'button' &&  ButtonTemplate(getFieldDecorator) }\n          </Form>\n        </Modal>\n      )\n    }\n\n    handleRadioChange = (e: any) => {\n      this.props.changeTemplateType(e.target.value)\n    }\n  }\n)\n\nclass CreateActivity extends React.Component <any, any>{\n  formRef: any\n\n  state = {\n    visible: false,\n    templateType: 'input'\n  }\n\n  showModal = () => {\n    this.setState({ visible: true })\n  }\n\n  handleCancel = () => {\n    this.setState({ visible: false })\n  }\n\n  handleCreate = () => {\n    const { form } = this.formRef.props\n    form.validateFields((err: any, values: any) => {\n      if (err) { return }\n      form.resetFields()\n      this.setState({ visible: false, templateType: 'input' })\n      this.props.handleCreateActivity(values)\n    })\n  }\n\n  changeTemplateType = (val: String) => {\n    this.setState({ templateType: val })\n  }\n\n  saveFormRef = (formRef: any) => {\n    this.formRef = formRef\n  }\n\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showModal}>配置</Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          templateType={this.state.templateType}\n          changeTemplateType={this.changeTemplateType}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n    )\n  }\n}\n\nexport default CreateActivity","export enum  PageTYPE {\n  LIST = 'LIST',\n  DETAIL = 'DETAIL',\n  GOODS = 'GOODS',\n  SEARCH_FILLTER = 'SEARCH_FILLTER'\n}","import React from 'react';\nimport axios from 'axios';\nimport SearchFillter from '../../components/SearchFillter';\nimport WrappedTableList from '../../components/TableList';\nimport Pagination from '../../components/Pagination';\nimport CreateActivity from '../../components/CreacteActivity'\n\nimport { \n  Checkbox, \n  Input,\n  Button,\n  message,\n  Select,\n  DatePicker,\n  Popconfirm,\n  Icon\n} from 'antd';\n\nimport './App.css';\n\nconst { Option } = Select;\nconst CheckboxGroup = Checkbox.Group;\n\nconst modules = ['搜索', '新增', '列表', '分页'];\n\nconst DeleteOption =  ({ item, removeSearchColumn }: any) => {\n  return(\n    <Popconfirm\n      title='确定要删除本项吗？'\n      okText='确定'\n      cancelText='取消'\n      onConfirm={() => removeSearchColumn(item)}\n      icon={<Icon type='question-circle-o' style={{ color: 'red' }} />}\n    >\n      {item.label + ' : '}\n    </Popconfirm>\n  )\n}\n\nclass App extends React.Component <any, any>{\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      selectedModules: ['搜索', '列表', '分页'],\n      visible: false,\n      search: {},\n      filters: [],\n      table: [],\n      addData: [],\n      pageOptions: {\n        hasPagination: true,\n        pageIndex: 1,\n        pageSize: 10\n      }\n    }\n  }\n\n  onChange = (selectedModules: any) => {\n    const { pageOptions } = this.state;\n\n    this.setState({\n      selectedModules,\n      pageOptions: Object.assign(pageOptions, \n        { hasPagination: selectedModules.some((item: string) => item === '分页') }\n      )\n    });\n  };\n\n  handleOk = () => {\n    this.setState({ visible: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  showModal = () => {\n    this.setState({ visible: true });\n  };\n\n  handleSearch = (data: any) => {\n    const { filters } = this.state;\n\n    if (data.type === 'select' && data.options) {\n      data.options = JSON.parse(data.options)\n    }\n    filters.splice(filters.length, 0, data);\n    this.setState({ filters })\n  }\n\n  handleCreateActivity = (data: any) => {\n    const { addData } = this.state\n    addData.push(data)\n    this.setState({\n      addData\n    })\n  }\n\n  handleTable = (data: any) => {\n    const { table } = this.state;\n\n    table.splice(table.length, 0, data);\n    this.setState({ table })\n  }\n\n  handlePage = (data: any) => {\n    const { pageOptions } = this.state;\n\n    this.setState({ pageOptions: Object.assign(pageOptions, data) })\n  }\n\n  saveConfig = () => {\n    const { filters, pageOptions, table, addData } = this.state;\n\n    const json = {\n      search: {\n        filters: filters.filter((item: any) => item.type !== 'button'),\n        buttons: filters.filter((item: any) => item.type === 'button')\n      },\n      addData,\n      pageOptions,\n      table\n    }\n    axios.post('/api/saveConfig', json).then(() => message.success('保存成功'))\n  }\n\n  removeTableColumn (item: any) {\n    const { table } = this.state\n\n    table.forEach((i: any, index: number) => { \n      if (i.label === item.label) {\n        table.splice(index, 1)\n        this.setState({\n          table: [...table]\n        })\n      }\n    })\n  }\n\n  removeSearchColumn (item: any) {\n    const { filters } = this.state\n\n    filters.forEach((i: any, index: number) => {\n      if (i.label === item.label) {\n        filters.splice(index, 1)\n        this.setState({\n          filters: [...filters]\n        })\n      }\n    })\n  }\n\n  renderTemplate (filters: any) {\n    return filters.map((item: any, index: number) => {\n      switch (item.type) {\n        case 'input':\n          return (\n            <span key={item.label}>\n              <DeleteOption item={item} removeSearchColumn={this.removeSearchColumn.bind(this)}/>\n              <Input placeholder={item.placeholder} />\n            </span>\n          )\n        case 'button':\n          return(\n            <span key={item.label}>\n              <DeleteOption item={item} removeSearchColumn={this.removeSearchColumn.bind(this)}/>\n              <Button type={item.buttonType}>{item.label}</Button>\n            </span>\n          )\n        case 'select':\n          return(\n            <span key={'selectBox' + item.label}>\n              <DeleteOption item={item} removeSearchColumn={this.removeSearchColumn.bind(this)}/>\n              <Select\n                style={{ width: 200 }}\n                key={'select' + item.label}\n                placeholder={item.placeholder}\n              >\n                <Option value='option1' key='option1'>option1</Option>\n                <Option value='option2' key='option2'>option2</Option>\n                <Option value='option3' key='option3'>option3</Option>\n              </Select>\n            </span>\n          )\n        default:\n          return(\n            <span key={'datapicker' + item.label}>\n              <DeleteOption item={item} removeSearchColumn={this.removeSearchColumn.bind(this)}/>\n              <DatePicker placeholder={item.placeholder} />\n            </span>\n          )\n      }\n    })\n  }\n\n  render () {\n    const { filters, table, pageOptions, addData } = this.state\n    return (\n      <>\n        <div className='box'>\n          <div className='mob-title'>模块选择</div>\n          <div className='mob-box'>\n            <CheckboxGroup options={modules} value={this.state.selectedModules } onChange={this.onChange}/>\n          </div>\n        </div>\n\n        {/* 搜索模块 */}\n        <div className='mob-containner'>\n          <div className='box'>\n            <div className='mob-title'>搜索模块配置</div>\n            <div className='mob-box'>\n              <SearchFillter handleSearch={this.handleSearch}/>\n              <div className='search-box'>\n                {\n                  this.renderTemplate(filters)\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 新增模块 */}\n        <div className=\"mob-containner\">\n          <div className=\"box\">\n            <div className='mob-title'>新增模块配置</div>\n            <div className=\"mob-box\">\n              <CreateActivity handleCreateActivity={this.handleCreateActivity}/>\n              <div className='search-box'>\n                {\n                  this.renderTemplate(addData)\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        {/* 列表模块 */}\n        <div className='mob-containner'>\n          <div className='box'>\n            <div className='mob-title'>列表模块配置</div>\n            <div className='mob-box'>\n              <WrappedTableList handleTable={this.handleTable}/>\n              <div className='table-box'>\n                <table className='table-model'>\n                  <thead>\n                    <tr>\n                    {\n                      table.map((item: any) => {\n                        return(\n                          <Popconfirm\n                            key={'table' + item.label}\n                            title='确定要删除本项吗？'\n                            okText='确定'\n                            cancelText='取消'\n                            onConfirm={() => this.removeTableColumn(item)}\n                            icon={<Icon type='question-circle-o' style={{ color: 'red' }} />}\n                          >\n                            <td>{item.label}</td>\n                          </Popconfirm>\n                        )\n                      })\n                    }\n                    </tr>\n                  </thead>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* 分页模块 */}\n        <div className='mob-containner'>\n          <div className='box'>\n            <div className='mob-title'>分页模块配置</div>\n            <div className='mob-box'>\n              <Pagination handlePage={this.handlePage}/>\n              <div className='table-box'>\n                {\n                  pageOptions.pageIndex && pageOptions.pageSize && '从第' + pageOptions.pageIndex + '页开始查询，每页' + pageOptions.pageSize + '条'\n                }\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className='fixed-footer' onClick={this.saveConfig}>\n          保存配置\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;","import React from 'react'\n\nclass Detail extends React.Component {\n  render () {\n    return (\n      <div>\n        正在开发中...\n      </div>\n    )\n  }\n}\n\nexport default Detail","import React from 'react'\nimport axios from 'axios'\nimport { Select, Button, message } from 'antd';\n\nconst { Option } = Select;\n\nclass Condition extends React.Component<any, any> {\n\n  constructor (props: any) {\n    super(props)\n    this.state = {\n      tableName: '',\n      conditionQueryField: '',\n      tableList: [],\n      tableInfo: [],\n      updateColumns: ''\n    }\n  }\n\n  loadTableList () {\n    axios.post('/rp2/autoCodeController/getTableList', { method: 'POST'})\n      .then(json => {\n        this.setState({\n          tableList: json.data.data\n        })\n      })\n  }\n\n  loadTableInfo (value: string) {\n    axios.post('/rp2/autoCodeController/queryTableInfo', { tableName: value })\n      .then(json => {\n        this.setState({\n          tableInfo: json.data.data\n        })\n      })\n  }\n\n  handleTableList = (value: any) => {\n    this.loadTableInfo(value)\n    this.setState({\n      tableName: value,\n      tableInfo: []\n    })\n  }\n\n  handleTableInfo = (value: [string]) => {\n    this.setState({\n      conditionQueryField: String(value)\n    })\n  }\n\n  save = () => {\n    const params = {\n      tableName: this.state.tableName,\n      allColumnss: '[]',\n      conditionQueryField: this.state.conditionQueryField,\n      pid: \"1\",\n      sqlCheck: -1,\n      updateColumns: this.state.updateColumns\n    }\n    axios.post('/rp2/autoCodeController/saveOne', params)\n      .then(json => {\n        json.data.flag === 'S' && message.success('保存成功')\n      })\n  }\n\n  handleUpdateTable = (val: String) => {\n    this.setState({\n      updateColumns: val\n    })\n  }\n\n  render () {\n    const { tableList, tableInfo } = this.state\n    return(\n      <div className='box'>\n        <div className='mob-title'>查询条件配置</div> \n        <div className='mob-box'>\n          <span style={{'marginRight': '20px'}}>  \n            <span>选择数据库：</span>\n              <Select style={{ width: 200 }} onChange={this.handleTableList}>\n              {\n                tableList.map((item: any) => (<Option value={item.tableName} key={item.tableName}>{item.tableName}</Option>))\n              }\n            </Select>\n          </span>\n          <span style={{'marginRight': '20px'}}>\n            <span>选择查询字段：</span>\n              <Select mode=\"multiple\" style={{ width: 400 }} onChange={this.handleTableInfo}>\n              {\n                tableInfo.map((item: any, index: number) => (\n                  <Option\n                    value={item.column_name}\n                    key={item.column_name + index}\n                  >\n                      {item.column_name + ' : ' + item.column_comment}\n                  </Option>))\n              }\n            </Select>\n          </span>\n          <span style={{'marginRight': '20px'}}>\n            <span>更新主键：</span>\n              <Select style={{ width: 400 }} onChange={this.handleUpdateTable}>\n              {\n                tableInfo.map((item: any, index: number) => (\n                  <Option\n                    value={item.column_name}\n                    key={item.column_name + index}\n                  >\n                      {item.column_name + ' : ' + item.column_comment}\n                  </Option>))\n              }\n            </Select>\n          </span>\n          <span style={{'marginRight': '20px'}}>\n            <Button type=\"primary\" onClick={this.save}>提交</Button>\n          </span>\n        </div>\n      </div>\n    )\n  }\n\n  componentDidMount () {\n    this.loadTableList()\n  }\n}\n\nexport default Condition;","import React from 'react'\nimport Goods from '../pages/goods'\nimport App from '../pages/list/App'\nimport Detail from '../pages/detail'\nimport Condition from '../pages/condition'\nimport { PageTYPE } from '../utils/enum/enum'\nimport { Layout, Menu, Breadcrumb, Icon } from 'antd'\n\nimport './index.css'\n\nconst { Header, Content, Footer, Sider } = Layout\nconst { SubMenu } = Menu\n\nclass PageLayout extends React.Component {\n  state = {\n    collapsed: false,\n    contentPage: PageTYPE.LIST\n  }\n\n  onCollapse = (collapsed: any) => {\n    this.setState({ collapsed })\n  }\n\n  changePageRouter = (e: any) => {\n    this.setState({\n      contentPage: e.key\n    })\n  }\n\n  renderContent () {\n    const { contentPage } = this.state\n\n    switch (contentPage) {\n      case PageTYPE.LIST:\n        return(<App />)\n      case PageTYPE.SEARCH_FILLTER:\n        return(<Condition />)\n      case PageTYPE.DETAIL:\n        return(<Detail />)\n      case PageTYPE.GOODS:\n        return (<Goods />) \n      default:\n        return(<App />)\n    }\n  }\n\n  render() {\n    return (\n      <Layout style={{ minHeight: '100vh' }}>\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n            <SubMenu\n              key=\"sub1\"\n              title={\n                <span>\n                  <Icon type=\"user\" />\n                  <span>clio 页面配置</span>\n                </span>\n              }\n            >\n              <Menu.Item key={PageTYPE.LIST} onClick={this.changePageRouter}>列表页配置</Menu.Item>\n              <Menu.Item key={PageTYPE.DETAIL} onClick={this.changePageRouter}>详情页配置</Menu.Item>\n              <Menu.Item key={PageTYPE.GOODS} onClick={this.changePageRouter}>商品页配置</Menu.Item>\n            </SubMenu>\n            <SubMenu\n              key=\"sub2\"\n              title={\n                <span>\n                  <Icon type=\"team\" />\n                  <span>api 配置</span>\n                </span>\n              }\n            >\n              <Menu.Item key={PageTYPE.SEARCH_FILLTER} onClick={this.changePageRouter}>查询条件配置</Menu.Item>\n            </SubMenu>\n          </Menu>\n        </Sider>\n        <Layout>\n          <Header style={{ background: '#fff', padding: 0 }} />\n          <Content style={{ margin: '0 16px' }}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>clio 页面配置</Breadcrumb.Item>\n              <Breadcrumb.Item>api 配置</Breadcrumb.Item>\n            </Breadcrumb>\n            {\n              this.renderContent()\n            }\n          </Content>\n          <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport default PageLayout;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport PageLayout from './layout/index'\n\nimport './index.css'\n\nReactDOM.render(<PageLayout />, document.getElementById('root'))"],"sourceRoot":""}